Docker Swarm - Notes 

Containers Everywhere = New Problems 
1. How do we automate container lifecycle? 
2. How can we easily scale out/in/up/down?
3. How can we ensure our containers are re-created if they fail?
4. How can we replace containers without downtime (blue/green deploy)? 
5. How can we control/track where containers get started? 
6. How can we create cross-node virtual networks? 
7. How can we ensure only trusted servers run our containers? 
8. How can we store secrets, keys, passwords and get them to the right container (and only that container)?

Swarm Mode: Built-in Orchestration 
- Swarm mode is a clustering solution build inside Docker.
- Not related to Swarm "classic" for pre-1.12 versions. 
- Added in 1.12 (Summer 2016) via Swarmkit toolkit.
- Enhanced in 1.13 (January 2017) via Stacks and Secrets.
- Not enabled by default, new commands once enabled:
   - docker swarm
   - docker node
   - docker service
   - docker stack
   - docker secret

# docker swarm init 
Workers::Raft Database 

# Raft consensus group::Internal Distributed state store::Manager::Worker::GossipNetwork
# service (swarm manager) -> replicas -> task -> container -> available node

Manager Node:
docker service create 

API, accepts command from client. 
Orchestrator, reconciliation loop for service objects and creates tasks.
Allocator, allocates ip addresses to tasks.
Scheduler, assigns nodes to tasks.
Dispatcher, checks in on workers.
Worker, connects to dispatcher to check on assigned tasks. 
Executor, executes the tasks assigned to worker node. 

# Docker swarm setup and output
~/Clones/docker/docker-master/docker-swarm (master ✔) ᐅ docker swarm init --advertise-addr=10.0.1.133
Swarm initialized: current node (pmxu2e8sdu284m6u9lf9r0u8k) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-3mfgbsh0j9xe9se4xf4xeq50rwq5wrtg74k7k0s85s86lvor4s-eigr49xhoh7xl14bsfc6u46e0 10.0.1.133:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

docker swarm init: What just happened? 
- Lots of PKI and security automation
    - Root signing and certificate created for our swarm. 
    - Certificate is issued for first manager node.
    - Join tokens are created. 

- Raft database created to store root CA, configs and secrets:
    - Encrypted by default on disk (1.13+). 
    - No need for another key/value system to hold orchestration/secrets. 
    - Replicates logs amongst Managers via mutual TLS in "control plane". 
